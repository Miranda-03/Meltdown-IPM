-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema glovo2
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `glovo2` ;

-- -----------------------------------------------------
-- Schema glovo2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `glovo2` ;
USE `glovo2` ;

-- -----------------------------------------------------
-- Table `glovo2`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `glovo2`.`usuario` ;

CREATE TABLE IF NOT EXISTS `glovo2`.`usuario` (
  `idusuario` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(40) NOT NULL,
  `dni` INT(11) NOT NULL,
  `telefono` VARCHAR(20) NOT NULL,
  `mail` VARCHAR(30) NOT NULL,
  `HorasAcumuladas` TIME NOT NULL,
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish_ci;


-- -----------------------------------------------------
-- Table `glovo2`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `glovo2`.`pedido` ;

CREATE TABLE IF NOT EXISTS `glovo2`.`pedido` (
  `codigoPedido` INT(11) NOT NULL AUTO_INCREMENT,
  `glober` INT(11) NOT NULL,
  `usuarioID` INT(11) NOT NULL,
  `direccion` VARCHAR(30) NOT NULL,
  `fecha` DATE NOT NULL,
  `estadoPedido` VARCHAR(40) NOT NULL,
  `estadoGlober` VARCHAR(40) NOT NULL,
  `medioPago` VARCHAR(45) NOT NULL,
  `fecha_inicio` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codigoPedido`),
  INDEX `glober` (`glober` ASC),
  INDEX `fk_pedido_usuario1_idx` (`usuarioID` ASC),
  CONSTRAINT `fk_pedido_usuario1`
    FOREIGN KEY (`usuarioID`)
    REFERENCES `glovo2`.`usuario` (`idusuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `pedido_ibfk_3`
    FOREIGN KEY (`glober`)
    REFERENCES `glovo2`.`usuario` (`idusuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish_ci;


-- -----------------------------------------------------
-- Table `glovo2`.`empresa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `glovo2`.`empresa` ;

CREATE TABLE IF NOT EXISTS `glovo2`.`empresa` (
  `codEmpresa` INT(11) NOT NULL,
  `razonSocial` VARCHAR(40) NOT NULL,
  `comision` INT(11) NOT NULL,
  PRIMARY KEY (`codEmpresa`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish_ci;


-- -----------------------------------------------------
-- Table `glovo2`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `glovo2`.`producto` ;

CREATE TABLE IF NOT EXISTS `glovo2`.`producto` (
  `codProducto` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(30) NOT NULL,
  `descripcion` TEXT NOT NULL,
  `empresa` INT(11) NOT NULL,
  `precioProducto` INT(11) NOT NULL,
  PRIMARY KEY (`codProducto`),
  INDEX `empresa` (`empresa` ASC),
  CONSTRAINT `producto_ibfk_1`
    FOREIGN KEY (`empresa`)
    REFERENCES `glovo2`.`empresa` (`codEmpresa`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish_ci;


-- -----------------------------------------------------
-- Table `glovo2`.`detalle_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `glovo2`.`detalle_pedido` ;

CREATE TABLE IF NOT EXISTS `glovo2`.`detalle_pedido` (
  `codDetalle` INT(11) NOT NULL,
  `producto` INT(11) NOT NULL,
  `pedido` INT(11) NOT NULL,
  `cantidad` INT(11) NOT NULL,
  `precio_producto` FLOAT NOT NULL,
  INDEX `producto` (`producto` ASC),
  INDEX `pedido` (`pedido` ASC),
  CONSTRAINT `detalle_pedido_ibfk_1`
    FOREIGN KEY (`pedido`)
    REFERENCES `glovo2`.`pedido` (`codigoPedido`),
  CONSTRAINT `detalle_pedido_ibfk_2`
    FOREIGN KEY (`producto`)
    REFERENCES `glovo2`.`producto` (`codProducto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_spanish_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- -------------------- INSERTS ---------------------------------
insert into empresa values ( 1, "Hermanos GÃ³mez y Ripold restaurante", 5%);
insert into empresa values ( 2, "open 24 hrs!", 7%);
insert into empresa values ( 3, "farmacia leopolda", 10%);
insert into empresa values ( 4, "hamburgueseria los tito", 5%);
insert into empresa values ( 5, "pizzas mirandas", 10%);
------------------------------------------------------------------------
insert into producto values ( 1, "pizza Fugazzetta", "la increible pizza Fugazzeta", 5, 500);
insert into producto values ( 2, "hamburguesa la hdp", "un gusto traicieonero y un gusto descomunal", 4, 1000);
insert into producto values ( 3, "adermisina", "tenes un dolor muscular? adermisina", 3, 80);  
insert into producto values ( 4, "palitos ramone", "quere un palito? quere ramone", 2, 150);
insert into producto values ( 5, "empanadas tucumanas", "las mejores esmpanadas argentina", 1, 700);
-------------------------------------------------------------------------
insert into usuario values ( 1, "javierMilei", 12345, 4576-7781, "vivalalibertadcarajo@gmail.com", 8);
insert into usuario values ( 2, "juancaelcapo", 54321, 4576-7782, "juancarlosmedina@gmail.com", 5);
insert into usuario values ( 3, "nemielmasbueno", 67890, 4576-7783, "nemielb@gmail.com", 6);
insert into usuario values ( 4, "brainbulei", 09876, 4576-7784, "elmarginal@gmail.com", 15);
insert into usuario values ( 5, "marcelogallardo", 10298, 4576-7785, "mgriver@gmail.com", 17);
--------------------------------------------------------------------------
insert into pedidos values ( 1, 1, 5, "franco 3045", "2018-08-15", "en camino", "esta a 5 cuadras", "tarjeta de credito", "21:00");
insert into pedidos values ( 2, 2, 4, "Maipu 3045", "2019-10-12", "finalizado", "esta a 10 cuadras", "tarjeta de credito", "15:00");
insert into pedidos values ( 3, 3, 4, "poberon 5589", "2020-01-26", "en camino", "llegando", "efectivo", "18:45");
insert into pedidos values ( 4, 4, 5, "pilcomayo 6000", "2018-04-25", "en camino", "esta a 9 cuadras", "efectivo", "22:00");
insert into pedidos values ( 5, 5, 3, "pomero 8095", "2021-07-16", "finalizado", "en la puerta", "tarjeta de credito", "11:30");
--------------------------------------------------------------------------
insert into detalle_pedido values ( 1, 5, 5, 2, 1400);
insert into detalle_pedido values ( 2, 4, 4, 1, 150);
insert into detalle_pedido values ( 3, 3, 3, 3, 240);
insert into detalle_pedido values ( 4, 2, 2, 2, 2000);
insert into detalle_pedido values ( 5, 1, 1, 4, 2000);

-- -------------------- STORE PROCEDURE -------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `realizarPedido` (in codPedido int , in codGlober int, codigoUsuario int, in direc varchar(30), in fecha date, in estadopedido varchar(40), estadoglober varchar(40), in mediopago varchar(45), fechainicio varchar(45)   )
BEGIN
insert into pedido values (codPedido, codglober,codigoUsuario, direc, fecha, estadopedido, estadoglober, mediopago, fechainicio);
END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarProducto`(in codProducto int , in nombre varchar(30),in descripcion text,in empresa int, in precioProducto int  )
BEGIN
insert into produo values (codProducto, nombre, descripcion, empresa, precioProducto);
END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `cambiacrDescProducto`( )
BEGIN
declare precio int;
select precioProducto into precio from producto;
update producto set descripcion= precio;
END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `usuariosPorMedioDePago`(in mediopago varchar(15), out cantidad int )
BEGIN
SELECT count(usuarioId) into cantidad from pedido where medioPagp=mediopago;
END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `finalizarPedido`(in codPedido int)
BEGIN
update pedido set estadoPedido="finalizado" where codPedido=codigoPedido;

END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `mostrarDatos`(in idUsuario int, out nombreUsuario varchar(40), out telefonoU int, mailU varchar(30))
BEGIN
select nombre into nombreUsuario from usuario where idUsuario=idusuario;
select telefono into telefonoU from usuario where idUsuario=idusuario;
select mail into mailU from usuario where idUsuario=idusuario;
END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE DEFINER=`root`@`localhost` PROCEDURE `verProducto`(in codPedido int, out nombreProd varchar(30))
BEGIN
select nombre into nombreProd from producto join detalle_pedido on detalle_pedido.producto=codProducto where codPedido=pedido;

END
-- -------------------- TRIGGERS --------------------------------

CREATE DEFINER=`root`@`localhost` TRIGGER `glovo2`.`usuario_AFTER_DELETE` AFTER DELETE ON `usuario` FOR EACH ROW
BEGIN
	DELETE FROM pedido WHERE usuarioID = OLD.idusuario and glober = OLD.idusuario;
END


-- ----------------- STORE FUNCTIONS ----------------------------


